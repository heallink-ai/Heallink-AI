[project]
name = "heallink-avatar-engine"
version = "2.0.0"
description = "HealLink Real-time 2D Avatar Engine with MuseTalk Lip-sync"
authors = [
    {name = "HealLink Team", email = "dev@heallink.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
dependencies = [
    # Core dependencies
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Machine Learning & Computer Vision
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "torchaudio>=2.1.0",
    "transformers>=4.35.0",
    "diffusers>=0.24.0",
    "accelerate>=0.24.0",
    "opencv-python>=4.8.0",
    "pillow>=10.1.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    
    # MediaPipe for face detection (lighter alternative to MMPose)
    "mediapipe>=0.10.0",
    
    # Audio processing
    "librosa>=0.10.0",
    "soundfile>=0.12.1",
    "openai-whisper>=20231117",
    
    # Video processing
    "imageio[ffmpeg]>=2.31.0",
    "moviepy>=1.0.3",
    
    # LiveKit integration
    "livekit>=0.11.0",
    "livekit-agents>=0.8.0",
    
    # Async & HTTP
    "aiohttp>=3.9.0",
    "asyncio-mqtt>=0.16.0",
    "websockets>=12.0",
    
    # Utilities
    "loguru>=0.7.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    "typer>=0.9.0",
    "rich>=13.7.0",
    "huggingface-hub>=0.19.0",
    "safetensors>=0.4.0",
    "omegaconf>=2.3.0",
    
    # Development
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
avatar-engine = "src.main:main"

[build-system]
requires = ["hatchling>=1.21.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"