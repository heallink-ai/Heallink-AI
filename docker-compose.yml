services:
  heallink:
    build:
      context: .
      dockerfile: ./apps/heallink/Dockerfile.dev
    container_name: heallink
    ports:
      - "3000:3000"
    volumes:
      - ./apps/heallink:/app/apps/heallink
      - ./packages:/app/packages
      - heallink-node-modules:/app/apps/heallink/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      # For browser-side requests (must be accessible from user's browser)
      - NEXT_PUBLIC_API_URL=http://localhost:3003/api/v1
      - NEXT_PUBLIC_AI_ENGINE_URL=http://localhost:8000/api/v1
      # For server-side requests (within Docker network)
      - API_URL=http://api:3003/api/v1
      - AI_ENGINE_URL=http://ai-engine:8000/api/v1
    depends_on:
      - api
      - ai-engine
    networks:
      - heallink-network
    restart: unless-stopped

  heallink-admin:
    build:
      context: .
      dockerfile: ./apps/heallink-admin/Dockerfile.dev
    container_name: heallink-admin
    ports:
      - "3001:3001"
    volumes:
      - ./apps/heallink-admin:/app/apps/heallink-admin
      - ./packages:/app/packages
      - heallink-admin-node-modules:/app/apps/heallink-admin/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - PORT=3001
      - NEXT_PUBLIC_API_URL=http://localhost:3003/api/v1
      - API_URL=http://api:3003/api/v1
      - NEXTAUTH_URL=http://localhost:3001
      - NEXTAUTH_SECRET=heallink-admin-dev-auth-secret-key-123
    depends_on:
      - api
    networks:
      - heallink-network
    restart: unless-stopped

  # heallink-providers:
  #   build:
  #     context: .
  #     dockerfile: ./apps/heallink-providers/Dockerfile.dev
  #   container_name: heallink-providers
  #   ports:
  #     - "3002:3002"
  #   volumes:
  #     - ./apps/heallink-providers:/app/apps/heallink-providers
  #     - ./packages:/app/packages
  #     - heallink-providers-node-modules:/app/apps/heallink-providers/node_modules
  #   environment:
  #     - NODE_ENV=development
  #     - NEXT_TELEMETRY_DISABLED=1
  #     - PORT=3002
  #     # For browser-side requests (must be accessible from user's browser)
  #     - NEXT_PUBLIC_API_URL=http://localhost:3003/api/v1
  #     # For server-side requests (within Docker network)
  #     - API_URL=http://api:3003/api/v1
  #   depends_on:
  #     - api
  #   networks:
  #     - heallink-network
  #   restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile.dev
    container_name: heallink-api
    ports:
      - "3003:3003"
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - api-node-modules:/app/apps/api/node_modules
      - ./logs:/app/logs
    env_file:
      - ./apps/api/.env
    depends_on:
      - mongodb
      - localstack
    networks:
      - heallink-network
    restart: unless-stopped

  ai-engine:
    build:
      context: .
      dockerfile: ./apps/ai-engine/Dockerfile.dev
    container_name: heallink-ai-engine
    ports:
      - "8000:8000"
    volumes:
      - ./apps/ai-engine:/app/apps/ai-engine
      - ./logs:/app/logs
      - ai-engine-cache:/root/.cache # Cache for model downloads
    env_file:
      - ./apps/ai-engine/.env
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - PYTHONPATH=/app
      - PORT=8000
      - HOST=0.0.0.0
      # LiveKit connection settings will come from .env file
    networks:
      - heallink-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s # Give more time for model downloads

  mongodb:
    image: mongo:latest
    container_name: heallink-mongodb
    ports:
      - "27018:27017"
    volumes:
      - ./data/mongodb:/data/db
      - ./data/mongodb-config:/data/configdb
    environment:
      - MONGO_INITDB_DATABASE=heallink
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    networks:
      - heallink-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  localstack:
    image: localstack/localstack:latest
    container_name: heallink-localstack
    ports:
      - "4566:4566" # LocalStack Gateway
      - "4510-4559:4510-4559" # external services port range
    environment:
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - SERVICES=s3,secretsmanager,dynamodb,cloudwatch,logs,iam,sts
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - PERSISTENCE=1
      - DATA_DIR=/var/lib/localstack/data
    volumes:
      - localstack-data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./scripts/localstack/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh
    networks:
      - heallink-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  heallink-network:
    driver: bridge

volumes:
  heallink-node-modules:
  heallink-admin-node-modules:
  heallink-providers-node-modules:
  api-node-modules:
  localstack-data:
  ai-engine-cache: # Add cache volume for AI engine models
